# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request d
# events but only for the davemeurer-patch-1 branch
on:
  push:
    branches: [ davemeurer-patch-1 ]
  pull_request:
    branches: [ davemeurer-patch-1 ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      

      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
        #run: |
         # echo Add other actions to build,
          #echo test, and deploy your project.
      #- name: Synopsys Detect
       # uses: blackducksoftware/github-action@2.0.0
        #with:
         # args: --blackduck.url=https://poc43.blackduck.synopsys.com --blackduck.api.token=${{ secrets.BLACK_DUCK_TOKEN}}
          
      - name: Static Analysis with Polaris
        #if: ${{steps.prescription.outputs.sastScan == 'true' }}
        id: step1
        run: |
          export POLARIS_SERVER_URL=${{ secrets.POLARIS_SERVER_URL}}
          export POLARIS_ACCESS_TOKEN=${{ secrets.POLARIS_ACCESS_TOKEN}}
          wget -q ${{ secrets.POLARIS_SERVER_URL}}/api/tools/polaris_cli-linux64.zip
          unzip -j polaris_cli-linux64.zip -d /tmp
          /tmp/polaris analyze -w
          echo "::set-output name=test::test"
          echo ${{ steps.step1.outputs.test }}
          
          
 
 
       
